#!/usr/bin/env python
import rospy
import cv2
from std_msgs.msg import String
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
import sys

bridge = CvBridge()

def fun(ros_image):
	print 'Got an Image'
	global bridge
	try:
		cv_image = bridge.imgmsg_to_cv2(ros_image, "bgr8")
	except CvBridgeError as e:
		print(e)
	# Detection code
	# Convert to grayscale image
	gray_image = cv2.cvtColor(cv_image, cv2.COLOR_BGR2GRAY)
	# Convert to Binary Image
	ret, thresh = cv2.threshold(gray_image, 127, 255, 0)
	# Calculate moments of Binary Image
#	M = cv2.moments(thresh)
	# Calculate X,Y coordinates of center
#	cX = int(M["m10"] / M["m00"])
#	cY = int(M["m01"] / M["m00"])
	# Put circle at the centroid
#	cv2.circle(cv_image, (cX, cY), 5, (255, 255, 255), -1)

	cv2.imshow("", cv_image)
	cv2.waitKey(0)



def main(args):
	rospy.init_node('centroid_detector', anonymous=True)
	image_sub = rospy.Subscriber("/magnus/camera/image_raw", Image, fun) 
	try:
		rospy.spin()
	except KeyboardInterrupt:
		print("Shutting Down")
	cv2.destroyAllWindows()

if __name__ == '__main__':
	main(sys.argv)


